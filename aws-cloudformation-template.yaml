AWSTemplateFormatVersion: '2010-09-09'
Description: 'Static web application deployment template 
  
    Logs S3 Bucket
    Content S3 Bucket
    AWS  CloudFront
    Route 53Record
  '

Parameters:
  CertificateArn:
    Description: Certificate ARN
    Type: String
    Default: arn:aws:acm:us-east-1:xxx:certificate/xxxx
  DomainName:
    Description: Hostend zone name
    Type: String
    Default: my-example.com
  SubDomain:
    Description: Subdomain
    Type: String
    Default: blue

Resources:
  
  S3BucketLogs:
    Type: AWS::S3::Bucket
    DeletionPolicy: Retain
    Properties:
      BucketName: !Sub 'web-page-${AWS::StackName}-logs'
      OwnershipControls:
        Rules:
          - ObjectOwnership: BucketOwnerPreferred
      BucketEncryption:
        ServerSideEncryptionConfiguration:
          - ServerSideEncryptionByDefault:
              SSEAlgorithm: AES256
  
  
  S3BucketRoot:
    Type: AWS::S3::Bucket
    DeletionPolicy: Retain
    Properties:
      BucketName: !Sub 'web-page-${AWS::StackName}-content'
      BucketEncryption:
        ServerSideEncryptionConfiguration:
          - ServerSideEncryptionByDefault:
              SSEAlgorithm: AES256
  
  
  S3BucketPolicy:
    Type: AWS::S3::BucketPolicy
    Properties:
      Bucket: !Ref S3BucketRoot
      PolicyDocument:
        Version: '2012-10-17'
        Statement:
          - Action: s3:GetObject
            Principal:
              Service: 'cloudfront.amazonaws.com'
            Effect: Allow
            Resource: !Sub '${S3BucketRoot.Arn}/*'
            Condition:
              StringEquals:
                'AWS:SourceArn': !Sub 'arn:aws:cloudfront::${AWS::AccountId}:distribution/${CloudFrontDistribution}'

  CloudFrontDistribution:
    Type: AWS::CloudFront::Distribution
    Properties:
      DistributionConfig:
        Aliases:
          - !Sub '${SubDomain}.${DomainName}'
        DefaultCacheBehavior:
          Compress: true
          DefaultTTL: 86400
          ForwardedValues:
            QueryString: true
          MaxTTL: 31536000
          TargetOriginId: !Sub 'S3-${AWS::StackName}-root'
          ViewerProtocolPolicy: 'redirect-to-https'
          ResponseHeadersPolicyId: !Ref ResponseHeadersPolicy
        CustomErrorResponses:
          - ErrorCachingMinTTL: 60
            ErrorCode: 404
            ResponseCode: 404
            ResponsePagePath: '/404.html'
          - ErrorCachingMinTTL: 60
            ErrorCode: 403
            ResponseCode: 403
            ResponsePagePath: '/403.html'
        Enabled: true
        HttpVersion: 'http2'
        DefaultRootObject: 'index.html'
        IPV6Enabled: true
        Logging:
          Bucket: !Sub '${S3BucketLogs.DomainName}'
          IncludeCookies: false
          Prefix: 'cdn/'
        Origins:
          - DomainName: !Sub '${S3BucketRoot.DomainName}'
            Id: !Sub 'S3-${AWS::StackName}-root'
            OriginAccessControlId: !Ref OriginAccessControl
            S3OriginConfig: {}
        PriceClass: 'PriceClass_All'
        ViewerCertificate:
          AcmCertificateArn: !Ref 'CertificateArn'
          MinimumProtocolVersion: 'TLSv1.1_2016'
          SslSupportMethod: 'sni-only'
      Tags:
        - Key: Solution
          Value: ACFS3

  OriginAccessControl:
    Type: AWS::CloudFront::OriginAccessControl
    Properties:
      OriginAccessControlConfig:
        # Get a unique ID for the OAC Config name.
        # Name must be unique within account
        Name: !Sub
          - amzn-secure-static-site-${guid}
          - guid: !Select [2, !Split ['/', !Ref 'AWS::StackId']]
        OriginAccessControlOriginType: s3
        SigningBehavior: always
        SigningProtocol: sigv4

  Route53RecordSetGroup:
    Type: AWS::Route53::RecordSetGroup
    Properties:
      HostedZoneName: !Sub '${DomainName}.'
      RecordSets:
        - Name: !Sub '${SubDomain}.${DomainName}'
          Type: 'A'
          AliasTarget:
            DNSName: !GetAtt 'CloudFrontDistribution.DomainName'
            EvaluateTargetHealth: false
            # HosteZoneId of AWS CF.
            HostedZoneId: 'Z2FDTNDATAQYW2'

  ResponseHeadersPolicy:
    Type: AWS::CloudFront::ResponseHeadersPolicy
    Properties:
      ResponseHeadersPolicyConfig:
        Name: !Sub '${AWS::StackName}-static-site-security-headers'
        SecurityHeadersConfig:
          StrictTransportSecurity:
            AccessControlMaxAgeSec: 63072000
            IncludeSubdomains: true
            Override: true
            Preload: true
          ContentSecurityPolicy:
            ContentSecurityPolicy: "default-src 'none'; img-src 'self'; script-src 'self'; style-src 'self'; object-src 'none'"
            Override: true
          ContentTypeOptions:
            Override: true
          FrameOptions:
            FrameOption: DENY
            Override: true
          ReferrerPolicy:
            ReferrerPolicy: 'same-origin'
            Override: true
          XSSProtection:
            ModeBlock: true
            Override: true
            Protection: true

Outputs:
  CloudFrontDistribution:
    Description: CloudFront distribution
    Value: !GetAtt CloudFrontDistribution.DomainName

  CloudFrontDomainName:
    Description: Website address
    Value: !Sub '${SubDomain}.${DomainName}'
